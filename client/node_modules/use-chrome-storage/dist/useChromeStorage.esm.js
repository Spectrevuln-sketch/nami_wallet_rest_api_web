import{useState as e,useEffect as t,useCallback as r}from"react";function o(o,n,c){const[s]=e(()=>"function"==typeof n?n():n),[a]=e(c),[i,m]=e(s),[h,u]=e(!0),[f,g]=e("");t(()=>{((e,t,r)=>{const o=void 0===t?e:{[e]:t};return new Promise((t,n)=>{chrome.storage[r].get(o,r=>{const o=chrome.runtime.lastError;if(o)return n(o);t(r[e])})})})(o,s,a).then(e=>{m(e),u(!0),g("")}).catch(e=>{u(!1),g(e)})},[o,s,a]);const d=r(e=>{const t="function"==typeof e?e(i):e;m(t),((e,t,r)=>new Promise((o,n)=>{chrome.storage[r].set({[e]:t},()=>{const e=chrome.runtime.lastError;e?n(e):o()})}))(o,t,a).then(()=>{u(!0),g("")}).catch(e=>{u(!1),g(e)})},[a,o,i]);return t(()=>{const e=(e,t)=>{t===a&&o in e&&(m(e[o].newValue),u(!0),g(""))};return chrome.storage.onChanged.addListener(e),()=>{chrome.storage.onChanged.removeListener(e)}},[o,a]),[i,d,h,f]}export default o;
//# sourceMappingURL=useChromeStorage.esm.js.map
